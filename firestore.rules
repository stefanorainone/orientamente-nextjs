rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Users collection
    match /users/{userId} {
      // Users can read their own data
      allow read: if isAuthenticated() && request.auth.uid == userId;
      // Admins can read all users
      allow read: if isAdmin();
      // Users can create their own account
      allow create: if isAuthenticated() && request.auth.uid == userId;
      // Users can update their own data
      allow update: if isAuthenticated() && request.auth.uid == userId;
      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Questions collection
    match /questions/{questionId} {
      // Everyone can read questions
      allow read: if true;
      // Only admins can create, update, or delete questions
      allow write: if isAdmin();
    }

    // Quiz responses collection
    match /quizResponses/{responseId} {
      // Users can read their own responses
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Admins can read all responses
      allow read: if isAdmin();
      // Users can create responses for themselves
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Users can update their own responses
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Users can delete their own responses
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}
